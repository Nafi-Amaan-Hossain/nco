{"version":3,"sources":["data.js","description.jsx","carousel.jsx","App.jsx","index.js"],"names":["continents","name","link","text","country_by_continent","country_isto_capital","Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Botswana","Brazil","Brunei","Bulgaria","Burundi","Cambodia","Cameroon","Canada","Chad","Chile","China","Colombia","Comoros","Congo","Croatia","Cuba","Cyprus","Denmark","Djibouti","Dominica","Ecuador","Egypt","England","Eritrea","Estonia","Ethiopia","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guinea","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Nicaragua","Niger","Nigeria","Niue","Norway","Oman","Pakistan","Palau","Palestine","Panama","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Qatar","Reunion","Romania","Rwanda","Samoa","Scotland","Senegal","Serbia","Seychelles","Singapore","Slovakia","Slovenia","Somalia","Spain","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Tajikistan","Tanzania","Thailand","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Wales","Yemen","Zambia","Zimbabwe","ContinentDescription","className","this","props","style","backgroundImage","image","height","description","React","Component","Fact","class","fact","AfricaDescription","Fragment","alt","src","filter","c","continent","map","x","country","AntarcticaDescription","AsiaDescription","AustraliaDescription","NorthAmericaDescription","SouthAmericaDescription","EuropeDescription","Carousel","state","currentSlide","paused","nextSlide","newSlide","length","setState","prevSlide","setCurrentSlide","index","timer","setInterval","clearInterval","onClick","fontSize","onSwipeLeft","onSwipeRight","reverse","slide","onMouseEnter","onMouseLeave","element","ContinentOverviewLeft","href","rel","ContinentOverviewRight","align","ContinentDefinition","orderedOverview","item","array","push","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fca81a9.chunk.js","sourcesContent":["export const continents = [\n    {\n      name:\"AFRICA\",\n      link:\"/africa\",\n      text: `Africa is the second largest continent and accounts to\n       one-fifth of Earth's land area. \n       It is bulging to the west and is surrounded by oceans and seas.\n       However, it is considered underpopulated as about 10% of the\n       Earth's population lives here despite of its huge size.`\n    },\n    {\n      name:\"ANTARCTICA\",\n      link:\"/antarctica\",\n      text:`Antarctica is the driest, southernmost, windiest and least populated continent on Earth. \n      It has the highest average height above sea level. \n      It contains the geographical South Pole and is located entirely in the Southern Hemisphere.\n      It was discovered by the Russian expedition of Fabian Gottlieb von Bellingshausen and Mikhail Lazarev.\n      It was much neglected in the 19th century because of its harsh climate. \n      It is governed by the Antarctic Treaty System. \n      The treaty prohibits military activities, mineral mining, nuclear explosions and nuclear waste disposal while, \n      supports scientific research and protects the continent's ecology. \n      `\n    },\n    {\n      name:\"ASIA\",\n      link:\"/asia\",\n      text:`Asia is the world's largest and most populous continent. \n      It accounts to 30 percent of Earth's surface area. \n      It is a land of extremes and has both the highest and lowest points on Earth.\n      The highest and lowest temperature on Asia are 50 degree Celcius and \n      -57 degree Celcius at Jacobabad of Pakistan and Verkhoyansk of Siberia respectively.\n      Huge countries such as China, India and Russia are present here.`,\n    },\n    {\n      name:\"AUSTRALIA\",\n      link:\"/australia\",\n      text:`Australia is the smallest, flattest, lowest and second driest continent.\n       It is called the island continent as it is surrounded by water on all sides.\n       It lies completely in the Southern Hemisphere. The other surrounding islands,\n       New Zealand, Papua New Guinea, etc are also considered part of this contiinent.`,\n    },\n    {\n      name:\"EUROPE\",\n      link:\"/europe\",\n      text:`Europe is the world's second smallest continent. \n       It is a cluster of peninsulas and islands that extends North-West of Asia.\n       Despite of it's northern location, most of Europe enjoys mild climate tempered \n       by warm ocean currents.`,\n    },\n    {\n      name:\"NORTH AMERICA\",\n      link:\"/north-america\",\n      text:`North America is the third-largest continent by area, and \n      the fourt-largest continent by population. \n      It consists of mainly three countries which is the USA, Canada, and Mexico. \n      The other countries are much smaller in size. \n      The continent lies in the Northern Hemisphere and mostly in the western hemisphere.\n      It is bordered by the Pacific, Atlantic, and Arctic Oceans in the West, South and North respectively.\n      `,\n    },\n    {\n      name:\"SOUTH AMERICA\",\n      link:\"/south-america\",\n      text:`South America is roughly a triangular continent. \n      It has an area of about 6.9 million square kilometers and is slightly smaller than North America.\n      It is connected by the Isthmus of Panama to North America. \n      In the south, it is separated from Antarctica by the Drake passage.\n      The continent has a regular coastline and relatively few islands. \n      Relative to Europe, Asia and Africa, 20th-century South America has been a peaceful continent with few wars.\n      `\n    }\n]\n// From country-json, in GitHub\nexport const country_by_continent = [\n    {\n        \"country\": \"Afghanistan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Albania\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Algeria\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"American Samoa\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Andorra\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Angola\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Anguilla\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Antigua and Barbuda\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Argentina\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Armenia\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Aruba\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Australia\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Austria\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Azerbaijan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Bahamas\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Bahrain\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Bangladesh\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Barbados\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Belarus\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Belgium\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Belize\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Benin\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Bermuda\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Bhutan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Bolivia\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Bosnia and Herzegovina\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Botswana\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Brazil\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Brunei\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Bulgaria\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Burkina Faso\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Burundi\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Cambodia\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Cameroon\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Canada\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Cape Verde\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Cayman Islands\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Central African Republic\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Chad\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Chile\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"China\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Christmas Island\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Cocos (Keeling) Islands\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Colombia\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Comoros\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Congo\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Cook Islands\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Costa Rica\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Croatia\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Cuba\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Cyprus\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Czech Republic\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Denmark\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Djibouti\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Dominica\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Dominican Republic\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"East Timor\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Ecuador\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Egypt\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"El Salvador\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"England\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Equatorial Guinea\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Eritrea\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Estonia\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Ethiopia\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Falkland Islands\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Faroe Islands\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Fiji Islands\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Finland\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"France\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"French Guiana\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"French Polynesia\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Gabon\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Gambia\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Georgia\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Germany\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Ghana\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Gibraltar\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Greece\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Greenland\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Grenada\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Guadeloupe\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Guam\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Guatemala\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Guinea\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Guinea-Bissau\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Guyana\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Haiti\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Holy See (Vatican City State)\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Honduras\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Hong Kong\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Hungary\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Iceland\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"India\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Indonesia\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Iran\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Iraq\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Ireland\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Israel\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Italy\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Ivory Coast\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Jamaica\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Japan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Jordan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Kazakhstan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Kenya\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Kiribati\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Kuwait\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Kyrgyzstan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Laos\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Latvia\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Lebanon\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Lesotho\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Liberia\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Libyan Arab Jamahiriya\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Liechtenstein\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Lithuania\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Luxembourg\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Macao\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"North Macedonia\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Madagascar\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Malawi\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Malaysia\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Maldives\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Mali\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Malta\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Marshall Islands\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Martinique\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Mauritania\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Mauritius\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Mayotte\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Mexico\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Micronesia, Federated States of\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Moldova\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Monaco\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Mongolia\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Montenegro\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Montserrat\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Morocco\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Mozambique\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Myanmar\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Namibia\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Nauru\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Nepal\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Netherlands\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Netherlands Antilles\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"New Caledonia\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"New Zealand\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Nicaragua\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Niger\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Nigeria\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Niue\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Norfolk Island\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"North Korea\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Northern Ireland\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Northern Mariana Islands\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Norway\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Oman\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Pakistan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Palau\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Palestine\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Panama\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Papua New Guinea\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Paraguay\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Peru\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Philippines\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Pitcairn\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Poland\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Portugal\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Puerto Rico\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Qatar\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Reunion\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Romania\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Russian Federation\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Rwanda\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Saint Helena\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Saint Kitts and Nevis\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Saint Lucia\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Saint Pierre and Miquelon\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Saint Vincent and the Grenadines\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Samoa\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"San Marino\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Sao Tome and Principe\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Saudi Arabia\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Scotland\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Senegal\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Serbia\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Seychelles\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Sierra Leone\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Singapore\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Slovakia\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Slovenia\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Solomon Islands\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Somalia\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"South Africa\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"South Korea\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"South Sudan\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Spain\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Sri Lanka\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Sudan\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Suriname\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Svalbard and Jan Mayen\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Swaziland\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Sweden\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Switzerland\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Syria\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Tajikistan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Tanzania\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Thailand\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"The Democratic Republic of Congo\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Togo\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Tokelau\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Tonga\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Trinidad and Tobago\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Tunisia\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Turkey\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Turkmenistan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Turks and Caicos Islands\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Tuvalu\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Uganda\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Ukraine\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"United Arab Emirates\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"United Kingdom\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"United States\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"United States Minor Outlying Islands\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Uruguay\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Uzbekistan\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Vanuatu\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Venezuela\",\n        \"continent\": \"South America\"\n    },\n    {\n        \"country\": \"Vietnam\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Virgin Islands, British\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Virgin Islands, U.S.\",\n        \"continent\": \"North America\"\n    },\n    {\n        \"country\": \"Wales\",\n        \"continent\": \"Europe\"\n    },\n    {\n        \"country\": \"Wallis and Futuna\",\n        \"continent\": \"Oceania\"\n    },\n    {\n        \"country\": \"Western Sahara\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Yemen\",\n        \"continent\": \"Asia\"\n    },\n    {\n        \"country\": \"Zambia\",\n        \"continent\": \"Africa\"\n    },\n    {\n        \"country\": \"Zimbabwe\",\n        \"continent\": \"Africa\"\n    }\n]\n// Made in a NodeJS repl session\nexport const country_isto_capital = {\n\n  Afghanistan: 'Kabul',\n  Albania: 'Tirana',\n  Algeria: 'Alger',\n  'American Samoa': 'Fagatogo',\n  Andorra: 'Andorra la Vella',\n  Angola: 'Luanda',\n  Anguilla: 'The Valley',\n  'Antigua and Barbuda': \"Saint John's\",\n  Argentina: 'Buenos Aires',\n  Armenia: 'Yerevan',\n  Aruba: 'Oranjestad',\n  Australia: 'Canberra',\n  Austria: 'Wien',\n  Azerbaijan: 'Baku',\n  Bahamas: 'Nassau',\n  Bahrain: 'al-Manama',\n  Bangladesh: 'Dhaka',\n  Barbados: 'Bridgetown',\n  Belarus: 'Minsk',\n  Belgium: 'Bruxelles [Brussel]',\n  Belize: 'Belmopan',\n  Benin: 'Porto-Novo',\n  Bermuda: 'Hamilton',\n  Bhutan: 'Thimphu',\n  Bolivia: 'La Paz',\n  'Bosnia and Herzegovina': 'Sarajevo',\n  Botswana: 'Gaborone',\n  Brazil: 'Brasília',\n  Brunei: 'Bandar Seri Begawan',\n  Bulgaria: 'Sofia',\n  'Burkina Faso': 'Ouagadougou',\n  Burundi: 'Bujumbura',\n  Cambodia: 'Phnom Penh',\n  Cameroon: 'Yaound',\n  Canada: 'Ottawa',\n  'Cape Verde': 'Praia',\n  'Cayman Islands': 'George Town',\n  'Central African Republic': 'Bangui',\n  Chad: \"N'Djam\",\n  Chile: 'Santiago de Chile',\n  China: 'Beijing',\n  'Christmas Island': 'Flying Fish Cove',\n  'Cocos (Keeling) Islands': 'West Island',\n  Colombia: 'Santaf',\n  Comoros: 'Moroni',\n  Congo: 'Brazzaville',\n  'Cook Islands': 'Avarua',\n  'Costa Rica': 'San Jos',\n  Croatia: 'Zagreb',\n  Cuba: 'La Habana',\n  Cyprus: 'Nicosia',\n  'Czech Republic': 'Prague',\n  Denmark: 'Copenhagen',\n  Djibouti: 'Djibouti',\n  Dominica: 'Roseau',\n  'Dominican Republic': 'Santo Domingo de Guzm',\n  'East Timor': 'Dili',\n  Ecuador: 'Quito',\n  Egypt: 'Cairo',\n  'El Salvador': 'San Salvador',\n  England: 'London',\n  'Equatorial Guinea': 'Malabo',\n  Eritrea: 'Asmara',\n  Estonia: 'Tallinn',\n  Ethiopia: 'Addis Abeba',\n  'Falkland Islands': 'Stanley',\n  'Faroe Islands': 'Tórshavn',\n  'Fiji Islands': 'Suva',\n  Finland: 'Helsinki [Helsingfors]',\n  France: 'Paris',\n  'French Guiana': 'Cayenne',\n  'French Polynesia': 'Papeete',\n  'French Southern territories': 'None',\n  Gabon: 'Libreville',\n  Gambia: 'Banjul',\n  Georgia: 'Tbilisi',\n  Germany: 'Berlin',\n  Ghana: 'Accra',\n  Gibraltar: 'Gibraltar',\n  Greece: 'Athenai',\n  Greenland: 'Nuuk',\n  Grenada: \"Saint George's\",\n  Guadeloupe: 'Basse-Terre',\n  Guam: 'Aga',\n  Guatemala: 'Guatemala City',\n  Guinea: 'Conakry',\n  'Guinea-Bissau': 'Bissau',\n  Guyana: 'Georgetown',\n  Haiti: 'Port-au-Prince',\n  'Heard Island and McDonald Islands': 'None',\n  'Holy See (Vatican City State)': 'Citt',\n  Honduras: 'Tegucigalpa',\n  'Hong Kong': 'Victoria',\n  Hungary: 'Budapest',\n  Iceland: 'Reykjavik',\n  India: 'New Delhi',\n  Indonesia: 'Jakarta',\n  Iran: 'Tehran',\n  Iraq: 'Baghdad',\n  Ireland: 'Dublin',\n  Israel: 'Jerusalem',\n  Italy: 'Roma',\n  'Ivory Coast': 'Yamoussoukro',\n  Jamaica: 'Kingston',\n  Japan: 'Tokyo',\n  Jordan: 'Amman',\n  Kazakhstan: 'Astana',\n  Kenya: 'Nairobi',\n  Kiribati: 'Bairiki',\n  Kuwait: 'Kuwait City',\n  Kyrgyzstan: 'Bishkek',\n  Laos: 'Vientiane',\n  Latvia: 'Riga',\n  Lebanon: 'Beirut',\n  Lesotho: 'Maseru',\n  Liberia: 'Monrovia',\n  'Libyan Arab Jamahiriya': 'Tripoli',\n  Liechtenstein: 'Vaduz',\n  Lithuania: 'Vilnius',\n  Luxembourg: 'Luxembourg',\n  Macao: 'Macao',\n  'North Macedonia': 'Skopje',\n  Madagascar: 'Antananarivo',\n  Malawi: 'Lilongwe',\n  Malaysia: 'Kuala Lumpur',\n  Maldives: 'Male',\n  Mali: 'Bamako',\n  Malta: 'Valletta',\n  'Marshall Islands': 'Dalap-Uliga-Darrit',\n  Martinique: 'Fort-de-France',\n  Mauritania: 'Nouakchott',\n  Mauritius: 'Port-Louis',\n  Mayotte: 'Mamoutzou',\n  Mexico: 'Mexico City',\n  'Federated States of Micronesia': 'Palikir',\n  Moldova: 'Chisinau',\n  Monaco: 'Monaco-Ville',\n  Mongolia: 'Ulan Bator',\n  Montenegro: 'Podgorica',\n  Montserrat: 'Plymouth',\n  Morocco: 'Rabat',\n  Mozambique: 'Maputo',\n  Myanmar: 'Rangoon (Yangon)',\n  Namibia: 'Windhoek',\n  Nauru: 'Yaren',\n  Nepal: 'Kathmandu',\n  Netherlands: 'Amsterdam',\n  'Netherlands Antilles': 'Willemstad',\n  'New Caledonia': 'Noum',\n  'New Zealand': 'Wellington',\n  Nicaragua: 'Managua',\n  Niger: 'Niamey',\n  Nigeria: 'Abuja',\n  Niue: 'Alofi',\n  'Norfolk Island': 'Kingston',\n  'North Korea': 'Pyongyang',\n  'Northern Ireland': 'Belfast',\n  'Northern Mariana Islands': 'Garapan',\n  Norway: 'Oslo',\n  Oman: 'Masqat',\n  Pakistan: 'Islamabad',\n  Palau: 'Koror',\n  Palestine: 'Jarusalem',\n  Panama: 'Ciudad de Panam',\n  'Papua New Guinea': 'Port Moresby',\n  Paraguay: 'Asuncion',\n  Peru: 'Lima',\n  Philippines: 'Manila',\n  Pitcairn: 'Adamstown',\n  Poland: 'Warszawa',\n  Portugal: 'Lisboa',\n  'Puerto Rico': 'San Juan',\n  Qatar: 'Doha',\n  Reunion: 'Saint-Denis',\n  Romania: 'Bucuresti',\n  'Russian Federation': 'Moscow',\n  Rwanda: 'Kigali',\n  'Saint Helena': 'Jamestown',\n  'Saint Kitts and Nevis': 'Basseterre',\n  'Saint Lucia': 'Castries',\n  'Saint Pierre and Miquelon': 'Saint-Pierre',\n  'Saint Vincent and the Grenadines': 'Kingstown',\n  Samoa: 'Apia',\n  'San Marino': 'San Marino',\n  'Sao Tome and Principe': 'S',\n  'Saudi Arabia': 'Riyadh',\n  Scotland: 'Edinburgh',\n  Senegal: 'Dakar',\n  Serbia: 'Belgrade',\n  Seychelles: 'Victoria',\n  'Sierra Leone': 'Freetown',\n  Singapore: 'Singapore',\n  Slovakia: 'Bratislava',\n  Slovenia: 'Ljubljana',\n  'Solomon Islands': 'Honiara',\n  Somalia: 'Mogadishu',\n  'South Africa': 'Pretoria',\n  'South Georgia and the South Sandwich Islands': 'None',\n  'South Korea': 'Seoul',\n  'South Sudan': 'Juba',\n  Spain: 'Madrid',\n  'Sri Lanka': 'Colombo',\n  Sudan: 'Khartum',\n  Suriname: 'Paramaribo',\n  'Svalbard and Jan Mayen': 'Longyearbyen',\n  Swaziland: 'Mbabane',\n  Sweden: 'Stockholm',\n  Switzerland: 'Bern',\n  Syria: 'Damascus',\n  Tajikistan: 'Dushanbe',\n  Tanzania: 'Dodoma',\n  Thailand: 'Bangkok',\n  'The Democratic Republic of Congo': 'Kinshasa',\n  Togo: 'Lomé',\n  Tokelau: 'Fakaofo',\n  Tonga: \"Nuku'alofa\",\n  'Trinidad and Tobago': 'Port-of-Spain',\n  Tunisia: 'Tunis',\n  Turkey: 'Ankara',\n  Turkmenistan: 'Ashgabat',\n  'Turks and Caicos Islands': 'Cockburn Town',\n  Tuvalu: 'Funafuti',\n  Uganda: 'Kampala',\n  Ukraine: 'Kyiv',\n  'United Arab Emirates': 'Abu Dhabi',\n  'United Kingdom': 'London',\n  'United States': 'Washington',\n  'United States Minor Outlying Islands': 'None',\n  Uruguay: 'Montevideo',\n  Uzbekistan: 'Toskent',\n  Vanuatu: 'Port-Vila',\n  Venezuela: 'Caracas',\n  Vietnam: 'Hanoi',\n  'Virgin Islands, British': 'Road Town',\n  'Virgin Islands, U.S.': 'Charlotte Amalie',\n  Wales: 'Cardiff',\n  'Wallis and Futuna': 'Mata-Utu',\n  'Western Sahara': 'El-Aai',\n  Yemen: 'Sanaa',\n  Zambia: 'Lusaka',\n  Zimbabwe: 'Harare'\n}\n\n","import React from \"react\";\nimport {country_by_continent, country_isto_capital} from \"./data.js\";\n\nclass ContinentDescription extends React.Component{\n  /**\n   * @PROPS: image, name, description\n   **/\n\n  render(){\n    return (\n      <div className=\"bg-gray-300\">\n        <div className=\"text-center pt-16 md:pt-32\">\n          <h1 className=\"font-bold text-purple-700 break-normal text-3xl md:text-5xl\">{this.props.name}</h1>\n        </div>\n        {/* image */}\n         <div className=\"bg-size bg-cover bg-gray-300 bg-center bg-fixed container mt-8 w-full max-w-6xl mx-auto rounded\"\n            style={{backgroundImage: \"url('images\"+this.props.image+\"')\", height: '65vh'}}></div>\n        {/* Container */}\n        <div className=\"container max-w-5xl mx-auto -mt-32\">\n          <div className=\"mx-0 sm:mx-6\">\n            <div className=\"bg-white w-full p-8 md:p-24 text-xl md:text-2xl text-gray-800\">\n              {/* Post Content */}\n              {this.props.description}\n            </div>  \n          </div>\n        </div>\n      </div>\n      )\n  }\n}\n\nclass Fact extends React.Component{\n  /** \n   * @PROPS: fact\n   **/\n\n  render(){\n    return (\n      <div className=\"my-4\">\n        <div class=\"bg-blue-700 text-white font-extrabold rounded-t px-4 py-2\">\n          FACT\n        </div>\n        <div class=\"border border-t-0 border-blue-400 rounded-b bg-blue-300 px-4 py-3 text-black\">\n          {this.props.fact}\n        </div>\n      </div>\n      )\n  }\n}\n\nclass AfricaDescription extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <p>\n          Africa is the second largest continent and accounts to one-fifth of\n          Earth's land area which is approximately 30.37 million square kilometers. It is bulging to the west and is surrounded by\n          oceans and seas. However, it is considered underpopulated as about 10%\n          of the Earth's population lives here despite of its huge size.\n          The continent was much unexplored for a long time\n          because of its harsh geographical barriers, such as the Sahara in the West, \n          the harsh coastlines, sea storms, forests, and so on. \n          It was even called the 'Dark Continent' by Henry M. Stanley, \n          a British explorer, to associate a mystery with the continent.\n          However, this term ended up entering in the European culture as a  way to\n          refer to Africa and it's people as wild, savage and untamed. \n          They tried to justify their inhuman actions by representing Africa with this image that they had created.\n\n        </p>\n        <div className=\"bg-white p-8\">\n          <img className=\"object-contain max-h-80 w-full\" alt=\"African Map\" src=\"images/africamap.png\"/>\n          <div className=\"text-lg text-center font-extralight\">Image source: Wikipedia</div>\n        </div>\n        <br />\n        <Fact fact=\"It is believed that Africa is the cradle of human race,\n        and the first humans originated here.\"/>\n        <br/>\n        <p>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Countries</h1>\n        <br />\n        48 countries share the area of mainland Africa, and six island nations,\n        are also considered to be part of the continent, the most famous being Madagascar.\n        All in all, there are\n        54 sovereign African countries and two disputed areas, namely Somaliland\n        (autonomous region of Somalia) and Western Sahara (occupied by Morocco\n        and claimed by the Polisario).\n        <br/>\n        <br/>\n        <div className=\"mx-8\">\n          <table className=\"min-w-full divide-y divide-purple-300\">\n            <thead className=\"bg-purple-50 rounded-lg\">\n              <tr>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Country\n                </th>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Capital\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                country_by_continent.filter(c=>c.continent===\"Africa\").map(x =>         \n                  (<tr key={x.country} className=\"border-b-2 border-purple-100\">\n                    <td className=\"text-lg text-center bg-purple-200\">{x.country}</td>\n                    <td className=\"text-lg text-center\">{country_isto_capital[x.country]}</td>\n                  </tr>)\n                )\n              }\n            </tbody>\n          </table>\n        </div>\n        </p>\n        <br/>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Physical Regions</h1>\n        <br />\n        Major physical regions in Africa are:\n        <br />\n        <ul className=\"list-disc list-inside\">\n          <br/>\n          <li>The Atlas Mountains</li>\n          <li>The Sahara Desert</li>\n          <li>The semiarid Sahel</li>\n          <li>The tropical Sudanian Savanna</li>\n          <li>The Nile and the Congo rivers</li>\n          <li>The Victoria Falls</li>\n          <li>The Ethiopian Highlands</li>\n          <li>The Ituri Rainforest</li>\n          <li>The African Great Lakes</li>\n          <li>The Great Rift Valley</li>\n          <li>The Namib and the Kalahari deserts</li>\n        </ul>\n        <Fact fact=\"Sahara Desert is the largest desert in the world.\"/>\n      </React.Fragment>\n    );\n  }\n}\n\nclass AntarcticaDescription extends React.Component{\n  render(){\n    return (\n      <React.Fragment>\n       <p>\n       Antarctica is the driest, southernmost, windiest and least populated continent on Earth. \n       It has the highest average height above sea level. \n       It has an area of about 14.2 million square kilometers.\n       It contains the geographical South Pole and is located entirely in the Southern Hemisphere.\n       It was discovered by the Russian expedition of Fabian Gottlieb von Bellingshausen and Mikhail Lazarev.\n       It was much neglected in the 19th century because of its harsh climate. \n        </p>\n        <br/>\n        <p>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Countries</h1>\n        <br />\n        There are no countries in Antarctica and \n        no permanent residents that live on the ice-covered cold-desert.\n        It is governed by the Antarctic Treaty System (ATS) \n        which was signed on December 1, 1959 and came into force on 23 June, 1961.\n        It was originally signed by twelve countries:\n        Argentina, Australia, Belgium, Chile, France, Japan, \n        New Zealand, Norway, South Africa, United Kingdom, United States and USSR (now disintegrated).\n        Now, more countries including India have joined making a total of 54 countries.\n        The treaty prohibits military activities, mineral mining, nuclear explosions \n        and nuclear waste disposal while, \n        supports scientific research and protects the continent's ecology. \n        </p>\n        <br/>\n        <p>\n        <div className=\"bg-white p-8\">\n          <img className=\"object-contain max-h-80 w-full\" alt=\"Physical Divisions Map\" src=\"images/antarctica_division.jpg\"/>\n          <div className=\"text-lg text-center font-extralight\">Image source: Wikipedia</div>\n        </div>\n        <br/>\n         <h1 className=\"text-4xl font-bold text-purple-500\">Physical Divisions</h1>\n         <br/>\n         Antarctica is actually a landmass, but the land is beneath a thick layer of snow.\n         The thick snow even goes upto depths of 4 km. The countinent gives an illusion to be flat \n         becuase of the ice, but mountains such as Mt Erebus (the highest mountain in the continent), \n         show that it has a varied terrain. \n         The continent is divided into Western and Eastern Antarctica by the Transantarctic range.\n         Eastern Antarctica is also called Greater Antarctica and Western Antarctica is also called Lesser Antarctica.\n        </p>\n        <br/>\n         <Fact fact=\"There is volcanic activity under the snow in Antarctica\"/>\n      </React.Fragment>\n      )\n  }\n}\n\nclass AsiaDescription extends React.Component{\n  render(){\n    return (\n      <React.Fragment>\n       <p>\n      Asia is the world's largest and most populous continent with an area of 44.58 million square kilometers. \n      It accounts to 30 percent of Earth's surface area. \n      It is called the \"Land of Contrasts\" and has both the highest and lowest points on Earth.\n      The highest and lowest temperature on Asia are 50 degree Celcius and \n      -57 degree Celcius at Jacobabad of Pakistan and Verkhoyansk of Siberia respectively.\n       </p>\n       <br/>\n       <div className=\"bg-white p-8\">\n         <img className=\"object-contain max-h-80 w-full\" alt=\"Asian Map\" src=\"images/asiamap.png\"/>\n         <div className=\"text-lg text-center font-extralight\">Image source: Wikipedia</div>\n       </div>\n       <br/>\n       <p>\n        <h1 className=\" text-4xl font-bold text-purple-500\">Countries</h1>\n        <br/>\n          Asia has large countries such as Russia, China and India.\n          However, it has numerous other countries as well. \n          The Commonwealth of Independent States(CIS) is a group of nations that became independent\n          after the disintegration of the Soviet Union. \n          Most of these are part of Asia, while some of these are part of Europe. \n          Asia has oil rich countries of the Middle-East,\n          such as Oman, UAE, Saudi Arabia, Qatar, etc. These countries are part of the OPEC, \n          (Organisation of Petroleum Producing Countries).\n          There are South Asian countries such as Sri Lanka, India, Cambodia, etc.,\n          East and South East Asian countries such as Japan, Mayanmar, etc., \n          island nations like Indonesia, Maldives, Philippines, \n          Central Asian countries such as Mongolia, Turkeministan, Kyrgyzstan, etc.\n          Overall, there are 51 countries in Asia, and three other territories, \n          some of these and transcontinental and extend to Europe, eg: Russia, Turkey.\n\n          <br/>\n          <br/>\n          <div className=\"mx-8\">\n            <table className=\"min-w-full divide-y divide-purple-300\">\n              <thead className=\"bg-purple-50 rounded-lg\">\n                <tr>\n                  <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                    Country\n                  </th>\n                  <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                    Capital\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  country_by_continent.filter(c=>c.continent===\"Asia\").map(x =>         \n                    (<tr key={x.country} className=\"border-b-2 border-purple-100\">\n                      <td className=\"text-lg text-center bg-purple-200\">{x.country}</td>\n                      <td className=\"text-lg text-center\">{country_isto_capital[x.country]}</td>\n                    </tr>)\n                  )\n                }\n              </tbody>\n            </table>\n          </div>\n       </p>\n       <br/>\n       <p>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Physical Divisions</h1>\n        <br/>\n        Asia can be divided into the following Physical Divisions:\n        <div>{/* Only because ul cannot be child of p */}\n        <ul className=\"list-disc list-inside\">\n          <br/>\n          <li>The Northern Lowlands</li>\n          <li>The Central Highlands</li>\n          <li>The Southern Plateaus</li>\n          <li>The Great River Basin</li>\n          <li>The Islands</li>\n        </ul>\n        </div>\n       </p>\n      </React.Fragment>\n      )\n  }\n}\n\nclass AustraliaDescription extends React.Component{\n  render(){\n    return (\n      <React.Fragment>\n       <p>\n       Australia is the smallest, flattest, lowest and second driest continent.\n        It is called the island continent as it is surrounded by water on all sides.\n        It lies completely in the Southern Hemisphere. The other surrounding islands,\n        New Zealand, Papua New Guinea, etc are also considered part of this continent.\n        It has an area of about 7.6 million square kilometers.\n       </p>\n       <br/>\n       <div className=\"bg-white p-8\">\n         <img className=\"object-contain max-h-80 w-full\" alt=\"Australian Map\" src=\"images/australiamap.png\"/>\n         <div className=\"text-lg text-center font-extralight\">Image source: Wikipedia</div>\n       </div>\n       <br/>\n       <Fact fact=\"A lot of Australia is dry and deserted, \n       but the South Eastern Coasts are very fertile.\"/>\n       <p>\n        <h1 className=\"  text-4xl font-bold text-purple-500\">Countries</h1>\n        <br/>\n        Australia includes the Commonwealth of Australia, New Zealand, Papua New Guinea and a few other nations.\n        The islands along with Commonwealth of Australia are also sometimes called as Oceania collectively.\n        <br/>\n        <br/>\n        <div className=\"mx-8\">\n          <table className=\"min-w-full divide-y divide-purple-300\">\n            <thead className=\"bg-purple-50 rounded-lg\">\n              <tr>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Country\n                </th>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Capital\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                country_by_continent.filter(c=>c.continent===\"Oceania\").map(x =>         \n                  (<tr key={x.country} className=\"border-b-2 border-purple-100\">\n                    <td className=\"text-lg text-center bg-purple-200\">{x.country}</td>\n                    <td className=\"text-lg text-center\">{country_isto_capital[x.country]}</td>\n                  </tr>)\n                )\n              }\n            </tbody>\n          </table>\n        </div>\n       </p>\n       <br/>\n       <p>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Physical Divisions</h1>\n        <br/>\n        Australia can be divided into the following Physical Divisions:\n        <ul className=\"list-disc list-inside\">\n          <br/>\n          <li>The Western Plateau</li>\n          <li>The Central Lowland</li>\n          <li>The Eastern Highlands</li>\n          <li>The Eastern Coastal Plains</li>\n        </ul>\n       </p>\n       <br/>\n      </React.Fragment>\n      )\n  }\n}\n\nclass NorthAmericaDescription extends React.Component{\n  render(){\n    return (\n      <React.Fragment>\n       <p>\n       North America is the third-largest continent by area, and \n      the fourth-largest continent by population. It has an area of about 24.71 million square kilometers.\n      The continent lies in the Northern Hemisphere and mostly in the western hemisphere.\n      It is bordered by the Pacific, Atlantic, and Arctic Oceans in the West, South and North respectively.\n       </p>\n       <br/>\n       <div className=\"bg-white p-8\">\n         <img className=\"object-contain max-h-80 w-full\" alt=\"North American Map\" src=\"images/north-americamap.png\"/>\n         <div className=\"text-lg text-center font-extralight\">Image source: Wikipedia</div>\n       </div>\n       <br/>\n       <p>\n        <h1 className=\"  text-4xl font-bold text-purple-500\">Countries</h1>\n        <br/>\n        In all, there are 23 countries in all of North America.\n        The three major and largest continents of North America are, the USA, Canada and Mexico, in order.\n        It consists of mainly three large countries which is the USA, Canada, and Mexico. \n        The other countries are much smaller in size, and are located in \n        much Southern part of the continent. \n        These include Cuba, El Salvador, Antigua and Barbuda, Haiti, and other nations.\n\n        <br/>\n        <br/>\n        <div className=\"mx-8\">\n          <table className=\"min-w-full divide-y divide-purple-300\">\n            <thead className=\"bg-purple-50 rounded-lg\">\n              <tr>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Country\n                </th>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Capital\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                country_by_continent.filter(c=>c.continent===\"North America\").map(x =>         \n                  (<tr key={x.country} className=\"border-b-2 border-purple-100\">\n                    <td className=\"text-lg text-center bg-purple-200\">{x.country}</td>\n                    <td className=\"text-lg text-center\">{country_isto_capital[x.country]}</td>\n                  </tr>)\n                )\n              }\n            </tbody>\n          </table>\n        </div>\n       </p>\n       <br/>\n       <p>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Physical Divisions</h1>\n        <br/>\n        North America can be divided into the following Physical Divisions:\n        <ul className=\"list-disc list-inside\">\n          <br/>\n          <li>The Great Lakes</li>\n          <li>The Western Cordilleras</li>\n          <li>The Great Plains</li>\n          <li>The Canadian Shield</li> \n          <li>The Eastern region</li>\n          <li>The Caribbean</li>\n        </ul>\n       </p>\n        <Fact fact=\"North America is has very large animals such as Black Bears, Mooses, etc.\"/>\n      </React.Fragment>\n      )\n  }\n}\n\nclass SouthAmericaDescription extends React.Component{\n  render(){\n    return (\n      <React.Fragment>\n       <p>\n            South America is roughly a triangular continent. \n            It has an area of about 6.9 million square kilometers and is slightly smaller than North America.\n            It is connected by the Isthmus of Panama to North America. \n            In the south, it is separated from Antarctica by the Drake passage.\n            The continent has a regular coastline and relatively few islands. \n            Relative to Europe, Asia and Africa, 20th-century South America has been a peaceful continent with few wars.\n       </p>\n       <br/>\n       <div className=\"bg-white p-8\">\n         <img className=\"object-contain max-h-80 w-full\" alt=\"South American Map\" src=\"images/south-americamap.png\"/>\n         <div className=\"text-lg text-center font-extralight\">Image source: Wikipedia</div>\n       </div>\n       <br/>\n       <p>\n        <h1 className=\"  text-4xl font-bold text-purple-500\">Countries</h1>\n        <br/>\n        South America has 14 countries in all. \n        Brazil being the largest country in South America has an area of about 8 million square kilometers.\n        It is followed by Argentina \n        and Peru with an area of about 2 million square kilometers and 1 million square kilometers respectively.\n        The other countries include Colombia, Ecuador, Venezuela,\n        Chile, Bolivia, Paraguay, Uruguay, Guyana, Suriname, French Guiana and Falkland Islands.\n        <br/>\n        <br/>\n        <div className=\"mx-8\">\n          <table className=\"min-w-full divide-y divide-purple-300\">\n            <thead className=\"bg-purple-50 rounded-lg\">\n              <tr>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Country\n                </th>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Capital\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                country_by_continent.filter(c=>c.continent===\"South America\").map(x =>         \n                  (<tr key={x.country} className=\"border-b-2 border-purple-100\">\n                    <td className=\"text-lg text-center bg-purple-200\">{x.country}</td>\n                    <td className=\"text-lg text-center\">{country_isto_capital[x.country]}</td>\n                  </tr>)\n                )\n              }\n            </tbody>\n          </table>\n        </div>\n       </p>\n       <br/>\n       <p>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Physical Divisions</h1>\n        <br/>\n        South America mainly has three Physical Divisions:\n        <ul className=\"list-disc list-inside\">\n          <br/>\n          <li>The Andes Mountains</li>\n          <li>The River Basins</li>\n          <li>The Coastal Plains</li>\n        </ul>\n        The Andes Mountains are a part of the Western Cordilleras.\n        The River Basins mainly constitute of the Amazon river basin and other rivers.\n        The Coastal Plains are the regions near the coast, these are very fertile.\n        The climate however, is more or less constant.\n       </p>\n       <br/>\n        <Fact fact=\"The city of Machu Pichhu was lost until it was rediscovered in the 19th century. \n        It used to be important in the Mayan Empire and was set in the hills for safety. \n        It is now a UNESO world heritage site. \"/>\n      </React.Fragment>\n      )\n  }\n}\n\nclass EuropeDescription extends React.Component{\n  render(){\n    return (\n      <React.Fragment>\n       <p>\n       Europe is the world's second smallest continent with an area of 4.233 square kilometers. \n       It is a cluster of peninsulas and islands that extends North-West of Asia.\n       Despite of it's northern location, most of Europe enjoys mild climate tempered \n       by warm ocean currents.\n       </p>\n       <br/>\n       <div className=\"bg-white p-8\">\n         <img className=\"object-contain max-h-80 w-full\" alt=\"European Map\" src=\"images/europemap.png\"/>\n         <div className=\"text-lg text-center font-extralight\">Image source: Wikipedia</div>\n       </div>\n       <br/>\n       <p>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Countries</h1>\n        <br/>\n        Europe has 48 countries, and most of them are part of the European Union (EU).\n        It also includes the Russian part that extends into the continent.\n        The largest economies of the continent are the UK, Germany, France, etc.\n        <br/>\n        <br/>\n        <div className=\"mx-8\">\n          <table className=\"min-w-full divide-y divide-purple-300\">\n            <thead className=\"bg-purple-50 rounded-lg\">\n              <tr>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Country\n                </th>\n                <th className=\"px-6 text-center py-3 text-left text-sm font-bold text-gray-500 uppercase\">\n                  Capital\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                country_by_continent.filter(c=>c.continent===\"Europe\").map(x =>         \n                  (<tr key={x.country} className=\"border-b-2 border-purple-100\">\n                    <td className=\"text-lg text-center bg-purple-200\">{x.country}</td>\n                    <td className=\"text-lg text-center\">{country_isto_capital[x.country]}</td>\n                  </tr>)\n                )\n              }\n            </tbody>\n          </table>\n        </div>\n       </p>\n       <br/>\n       <p>\n        <h1 className=\"text-4xl font-bold text-purple-500\">Physical Divisions</h1>\n        <br/>\n        Europe can be divided into the following Physical Divisions:\n        <ul className=\"list-disc list-inside\">\n          <br/>\n          <li>The Fjords</li>\n          <li>The Alps</li>\n          <li>Scandinavian Highlands</li>\n          <li>Central Uplands</li>\n          <li>Northern Lowlands</li>\n        </ul>\n       </p>\n       <br/>\n      </React.Fragment>\n      )\n  }\n}\n\nexport {\n  ContinentDescription, AustraliaDescription,\n  AsiaDescription, AfricaDescription,\n  AntarcticaDescription, NorthAmericaDescription, \n  SouthAmericaDescription, EuropeDescription\n}","import React from \"react\";\nimport Swipe from \"react-easy-swipe\";\nimport {continents} from \"./data.js\";\n\nclass Carousel extends React.Component {\n    state = {\n      currentSlide: 0,\n      paused: false,\n    };\n\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      if (this.state.paused === false) {\n        let newSlide =\n          this.state.currentSlide === continents.length - 1\n            ? 0\n            : this.state.currentSlide + 1;\n        this.setState({ currentSlide: newSlide, paused: this.state.paused });\n      }\n    }, 3000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  };\n  \n\n  nextSlide = () => {\n    let newSlide =\n      this.state.currentSlide === continents.length - 1\n        ? 0\n        : this.state.currentSlide + 1;\n    this.setState({ currentSlide: newSlide, paused: this.state.paused });\n  };\n\n  prevSlide = () => {\n    let newSlide =\n      this.state.currentSlide === 0\n        ? continents.length - 1\n        : this.state.currentSlide - 1;\n    this.setState({ currentSlide: newSlide, paused: this.state.paused });\n  };\n\n  setCurrentSlide = (index) => {\n    this.setState({ currentSlide: index, paused: this.state.paused });\n  };\n\n  render() {\n    return (\n      <div className=\"mt-8 w-full bg-gray-600\">\n        <div className=\"max-h-96 flex overflow-hidden relative fixed\">\n          <div\n            onClick={this.prevSlide}\n            className=\"absolute left-0 text-3xl inset-y-1/2 text-white cursor-pointer\"\n          >\n          <span class=\"material-icons\" style={{fontSize:'48px'}}>\n            navigate_before\n          </span>\n          </div>\n\n          <Swipe onSwipeLeft={this.nextSlide} onSwipeRight={this.prevSlide}>\n            {continents.reverse().map((slide, index) => {\n              return (\n                <img\n                  src={`/images${slide.link}.jpg`}\n                  alt={`${slide.name}`}\n                  key={slide.name}\n                  className={\n                    index === this.state.currentSlide\n                      ? \"block w-full h-auto lg:px-64 object-contain animate-fade-in\"\n                      : \"hidden\"\n                  }\n                  onMouseEnter={() => {\n                    this.setState({ paused: true });\n                  }}\n                  onMouseLeave={() => {\n                    this.setState({ paused: false });\n                  }}\n                />\n              );\n            })}\n          </Swipe>\n\n          <div className=\"absolute w-full flex justify-center bottom-0\">\n            {continents.map((element, index) => {\n              return (\n                <div\n                  className={\n                    index === this.state.currentSlide\n                      ? \"h-2 w-2 bg-purple-700 rounded-full mx-2 mb-2 cursor-pointer\"\n                      : \"h-2 w-2 bg-white rounded-full mx-2 mb-2 cursor-pointer\"\n                  }\n                  key={index}\n                  onClick={() => {\n                    this.setCurrentSlide(index);\n                  }}\n                ></div>\n              );\n            })}\n          </div>\n\n          <div\n            onClick={this.nextSlide}\n            className=\"absolute right-0 text-3xl inset-y-1/2 text-white cursor-pointer\">\n            <span class=\"material-icons\" style={{fontSize:'48px'}}>\n            navigate_next\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport {ContinentDescription, AustraliaDescription,\n    AsiaDescription, AfricaDescription,\n    AntarcticaDescription, NorthAmericaDescription, \n    SouthAmericaDescription, EuropeDescription} from \"./description.jsx\";\nimport Carousel from \"./carousel.jsx\";\nimport {continents} from \"./data.js\";\n\nclass ContinentOverviewLeft extends React.Component {\n  /**\n   * @PROPS: name, link, text\n   * */\n  render() {\n    return (\n      <div className=\"mt-6 px-0 rounded-lg bg-white lg:mr-64\">\n        <img src={\"images\"+this.props.link+\".jpg\"} alt={this.props.name} className=\"w-full h-1/2 rounded-lg\" />\n        <h1 className=\"lg:text-left text-center lg:text-5xl text-3xl text-purple-600 lg:py-4 py-2 font-bold ml-4\">\n          {this.props.name}\n        </h1>\n        <p className=\"mt-1 ml-4 text-gray-600 text-xl pr-2 lg:text-xl md:text-xl sm:text-lg\">\n          {this.props.text}\n        </p>\n        <br />\n        <a href={this.props.link} rel=\"no-opener no-referer\">\n          <button className=\"border-b-4 m-4 p-4 rounded hover:border-purple-200 bg-purple-300 border-purple-500\">\n            Learn more\n          </button>\n        </a>\n        <br />\n      </div>\n    );\n  }\n}\n\nclass ContinentOverviewRight extends React.Component {\n  /**\n   * @PROPS: name, link, text\n   * */\n  render() {\n    return (\n      <div className=\"mt-6 px-0 rounded-lg bg-white lg:ml-64\" align=\"right\">\n        <img src={\"images/\"+this.props.link+\".jpg\"} alt={`${this.props.name}`} className=\"w-full h-1/2 rounded-lg\" />\n        <h1 className=\"lg:text-right text-center lg:text-5xl text-3xl text-purple-600 lg:py-4 py-2 font-bold mr-4\">\n          {this.props.name}\n        </h1>\n        <p className=\"mt-1 mr-4 text-gray-600 text-xl pr-2 lg:text-xl md:text-xl sm:text-l\">\n          {this.props.text}\n        </p>\n        <br />\n        <a href={this.props.link} rel=\"no-opener no-referer\">\n          <button className=\"border-b-4 m-4 p-4 rounded hover:border-purple-200 bg-purple-300 border-purple-500\">\n            Learn more\n          </button>\n        </a>\n        <br />\n      </div>\n    );\n  }\n}\n\n\nclass ContinentDefinition extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"p-0\">\n          <div className=\"lg:w-2/3 bg-purple-300 text-gray-700 rounded mt-8 flex border-b-4 border-purple-500\">\n            <br />\n            <div className=\"ml-16 mt-6\">\n              <h1 className=\"text-4xl text-purple-600 font-bold\">\n                Continent\n              </h1>\n              <br/>\n              <p className=\"mt-1 text-gray-600 text-xl pr-6 lg:text-xl md:text-xl sm:text-l\">\n                A continent is a group of certain countries in a certain area,\n                which are divided based on factors such as climate, geographical\n                features, culture, flora and fauna, etc. The Earth is divided into seven\n                continents: Africa, Antarctica, Asia, Australia, North America\n                and South America. \n                The continents add up to about 148 million square kilometers of landmass.\n              </p>\n              <br />\n              <br />\n            </div>\n          </div>\n          <br />\n        </div>\n        <React.Fragment>\n          <br />\n          <br />\n        </React.Fragment>\n      </React.Fragment>\n    );\n  }\n}\n\n\n  let orderedOverview = [];\n\n  function organiseContinents(item, index, array){\n  if (index % 2 === 0){\n    orderedOverview.push(\n      <React.Fragment>\n        <ContinentOverviewRight key={item.name} name={item.name} text={item.text} link={item.link}/>\n        <br/>\n        <br/>\n      </React.Fragment>\n      )\n  } else {\n    orderedOverview.push(\n      <React.Fragment>\n        <ContinentOverviewLeft key={item.name} name={item.name} text={item.text} link={item.link}/>\n        <br/>\n        <br/>\n      </React.Fragment>\n      )\n  }\n}\n\n\ncontinents.map(organiseContinents)\n\n\nfunction App(props){\n  /**\n   * @NOPROPS \n   * */\n    return (\n      <Router>\n      <Routes>\n        <Route path=\"/\" element={\n          <React.Fragment>\n          <Carousel/>\n            <div className=\"relative p-4\">\n            <ContinentDefinition/>\n              {\n                orderedOverview.map(component=>component)\n              }\n            </div>\n          </React.Fragment>\n        }/>\n        <Route path=\"/africa\" element={\n          <ContinentDescription description=<AfricaDescription/> \n            image=\"/africa.jpg\" name=\"AFRICA\"/>\n        }/>\n        <Route path=\"/antarctica\" element={\n          <ContinentDescription description=<AntarcticaDescription/>\n          image=\"/antarctica.jpg\" name=\"ANTARCTICA\"/>\n        }/>\n        <Route path=\"/asia\" element={\n          <ContinentDescription description=<AsiaDescription/>\n          image=\"/asia.jpg\" name=\"ASIA\"/>\n        }/>\n        <Route path=\"/australia\" element={\n          <ContinentDescription description=<AustraliaDescription/>\n          image=\"/australia.jpg\" name=\"AUSTRALIA\"/>\n        }/>\n        <Route path=\"/north-america\" element={\n          <ContinentDescription description=<NorthAmericaDescription/>\n          image=\"/north-america.jpg\" name=\"NORTH AMERICA\"/>\n        }/>\n        <Route path=\"/south-america\" element={\n          <ContinentDescription description=<SouthAmericaDescription/>\n          image=\"/south-america.jpg\" name=\"SOUTH AMERICA\"/>\n        }/>\n        <Route path=\"/europe\" element={\n          <ContinentDescription description=<EuropeDescription/>\n          image=\"/europe.jpg\" name=\"EUROPE\"/>\n        }/>\n      </Routes>\n      </Router>\n    );\n  }\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}